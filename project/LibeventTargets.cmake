# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.5)
   message(FATAL_ERROR "CMake >= 2.6.0 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.6)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_targetsDefined)
set(_targetsNotDefined)
set(_expectedTargets)
foreach(_expectedTarget event_core_shared event_extra_shared event_openssl_shared event_shared)
  list(APPEND _expectedTargets ${_expectedTarget})
  if(NOT TARGET ${_expectedTarget})
    list(APPEND _targetsNotDefined ${_expectedTarget})
  endif()
  if(TARGET ${_expectedTarget})
    list(APPEND _targetsDefined ${_expectedTarget})
  endif()
endforeach()
if("${_targetsDefined}" STREQUAL "${_expectedTargets}")
  unset(_targetsDefined)
  unset(_targetsNotDefined)
  unset(_expectedTargets)
  set(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT "${_targetsDefined}" STREQUAL "")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_targetsDefined}\nTargets not yet defined: ${_targetsNotDefined}\n")
endif()
unset(_targetsDefined)
unset(_targetsNotDefined)
unset(_expectedTargets)


# Create imported target event_core_shared
add_library(event_core_shared SHARED IMPORTED)

set_target_properties(event_core_shared PROPERTIES
  INTERFACE_LINK_LIBRARIES "ws2_32"
)

# Create imported target event_extra_shared
add_library(event_extra_shared SHARED IMPORTED)

set_target_properties(event_extra_shared PROPERTIES
  INTERFACE_LINK_LIBRARIES "ws2_32;event_core_shared"
)

# Create imported target event_openssl_shared
add_library(event_openssl_shared SHARED IMPORTED)

set_target_properties(event_openssl_shared PROPERTIES
  INTERFACE_LINK_LIBRARIES "ws2_32;event_core_shared;\$<\$<NOT:\$<CONFIG:DEBUG>>:D:/Software/OpenSSL-Win64/lib/VC/libssl64MD.lib>;\$<\$<CONFIG:DEBUG>:D:/Software/OpenSSL-Win64/lib/VC/libssl64MDd.lib>;\$<\$<NOT:\$<CONFIG:DEBUG>>:D:/Software/OpenSSL-Win64/lib/VC/libcrypto64MD.lib>;\$<\$<CONFIG:DEBUG>:D:/Software/OpenSSL-Win64/lib/VC/libcrypto64MDd.lib>"
)

# Create imported target event_shared
add_library(event_shared SHARED IMPORTED)

set_target_properties(event_shared PROPERTIES
  INTERFACE_LINK_LIBRARIES "ws2_32"
)

# Import target "event_core_shared" for configuration "Debug"
set_property(TARGET event_core_shared APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)
set_target_properties(event_core_shared PROPERTIES
  IMPORTED_IMPLIB_DEBUG "D:/mount/libevent-2.1.10-win/project/lib/Debug/event_core.lib"
  IMPORTED_LOCATION_DEBUG "D:/mount/libevent-2.1.10-win/project/bin/Debug/event_core.dll"
  )

# Import target "event_extra_shared" for configuration "Debug"
set_property(TARGET event_extra_shared APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)
set_target_properties(event_extra_shared PROPERTIES
  IMPORTED_IMPLIB_DEBUG "D:/mount/libevent-2.1.10-win/project/lib/Debug/event_extra.lib"
  IMPORTED_LOCATION_DEBUG "D:/mount/libevent-2.1.10-win/project/bin/Debug/event_extra.dll"
  )

# Import target "event_openssl_shared" for configuration "Debug"
set_property(TARGET event_openssl_shared APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)
set_target_properties(event_openssl_shared PROPERTIES
  IMPORTED_IMPLIB_DEBUG "D:/mount/libevent-2.1.10-win/project/lib/Debug/event_openssl.lib"
  IMPORTED_LOCATION_DEBUG "D:/mount/libevent-2.1.10-win/project/bin/Debug/event_openssl.dll"
  )

# Import target "event_shared" for configuration "Debug"
set_property(TARGET event_shared APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)
set_target_properties(event_shared PROPERTIES
  IMPORTED_IMPLIB_DEBUG "D:/mount/libevent-2.1.10-win/project/lib/Debug/event.lib"
  IMPORTED_LOCATION_DEBUG "D:/mount/libevent-2.1.10-win/project/bin/Debug/event.dll"
  )

# Import target "event_core_shared" for configuration "Release"
set_property(TARGET event_core_shared APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(event_core_shared PROPERTIES
  IMPORTED_IMPLIB_RELEASE "D:/mount/libevent-2.1.10-win/project/lib/Release/event_core.lib"
  IMPORTED_LOCATION_RELEASE "D:/mount/libevent-2.1.10-win/project/bin/Release/event_core.dll"
  )

# Import target "event_extra_shared" for configuration "Release"
set_property(TARGET event_extra_shared APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(event_extra_shared PROPERTIES
  IMPORTED_IMPLIB_RELEASE "D:/mount/libevent-2.1.10-win/project/lib/Release/event_extra.lib"
  IMPORTED_LOCATION_RELEASE "D:/mount/libevent-2.1.10-win/project/bin/Release/event_extra.dll"
  )

# Import target "event_openssl_shared" for configuration "Release"
set_property(TARGET event_openssl_shared APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(event_openssl_shared PROPERTIES
  IMPORTED_IMPLIB_RELEASE "D:/mount/libevent-2.1.10-win/project/lib/Release/event_openssl.lib"
  IMPORTED_LOCATION_RELEASE "D:/mount/libevent-2.1.10-win/project/bin/Release/event_openssl.dll"
  )

# Import target "event_shared" for configuration "Release"
set_property(TARGET event_shared APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(event_shared PROPERTIES
  IMPORTED_IMPLIB_RELEASE "D:/mount/libevent-2.1.10-win/project/lib/Release/event.lib"
  IMPORTED_LOCATION_RELEASE "D:/mount/libevent-2.1.10-win/project/bin/Release/event.dll"
  )

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
